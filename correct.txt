import { LoadScript } from '@react-google-maps/api'
import './App.css'
import Header from './components/Header'
import { ListItem } from '@mui/material'
import Grid from '@mui/joy/Grid';
import Map from './components/Map/Map';
import List from './components/List';
import { useEffect, useRef, useState } from 'react';
import { debounce } from 'lodash';
import { getPlaceData } from './api';


function App() {
  const [coordinates, setCoordinates] = useState<{ lat: number; lng: number }>({ lat: 12.838442, lng: 109.095887 });
  const [bounds, setBounds] = useState<{ ne: { lat: number; lng: number }; sw: { lat: number; lng: number } } | null>(null);
  const [isLoading, setIsLoading] = useState<Boolean>(false);
  const [type, setType] = useState<string>('restaurants');
  const [places, setPlaces] = useState<any[]>([]);

  useEffect(() => {
    navigator.geolocation.getCurrentPosition(({ coords: { latitude, longitude } }) => {
      setCoordinates({ lat: latitude, lng: longitude });
  })
}, []);

  const fetchPlacesDebounced = useRef(
    debounce(async (type: string, sw: { lat: number; lng: number }, ne: { lat: number; lng: number }) => {
      console.log('Hi');
      setIsLoading(true);
      try {
        if (bounds?.sw && bounds?.ne) {
          // const data = await getPlaceData(type, bounds?.sw, bounds?.ne);
          // setPlaces(data);
          getPlaceData(type, bounds?.sw, bounds?.ne).then((data) => {
            console.log("data", data);
            setPlaces(data);
            setIsLoading(false);
          }).catch((error) => {
            console.error("Error fetching places:", error);
            setIsLoading(false);
          });
        }
      } catch (error) {
        console.error("Error fetching places:", error);
        setIsLoading(false);
      }
    }, 500)
  ).current;;

useEffect(() => {
  console.log('Hello');
  
  if (bounds?.sw && bounds?.ne) {
    fetchPlacesDebounced(type, bounds.sw, bounds.ne);
  }
}, [type, bounds]);

  return (
    <>
      {/* <CSSBas */}
      <LoadScript googleMapsApiKey={import.meta.env.VITE_GOOGLEMAP_API_KEY} libraries={['places']}>
        <Header />
        <Grid container spacing={3} style={{ width: '100%' }}>
          <Grid xs={12} md={4}>
            <ListItem>
              <List
                isLoading={isLoading}
              />
            </ListItem>
          </Grid>
          <Grid xs={12} md={8}>
            <ListItem>
              <Map
                coordinates={coordinates}
                setCoordinates={setCoordinates}
                bounds={bounds}
                setBounds={setBounds}
               />
            </ListItem>
          </Grid>
        </Grid>
      </LoadScript>
    </>
  )
}

export default App
